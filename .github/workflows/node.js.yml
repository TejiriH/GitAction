name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - uses: actions/checkout@v2  # This step checks out your repository

      - name: Use Node.js ${{ matrix.node-version }}  # This is the name of the next step
        uses: actions/setup-node@v1  # This is the action for setting up Node.js
        with:
          node-version: ${{ matrix.node-version }}  # This specifies the Node.js version to use
        
      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install npm
        run: npm install


      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present

      - name: Save npm debug log
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: npm-debug-log
          path: /home/runner/.npm/_logs/*.log

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_KEY }}" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /path/to/your/project
            git pull origin main
            npm install
            npm run build --if-present
            pm2 restart app.js # assuming you are using pm2 to manage the Node app
          EOF
